#version 430

#extension GL_ARB_compute_shader : enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(binding = 0, std430) buffer InData {
    vec4 data[];
} in_data;
layout(binding = 1, std430) buffer OutData {
    vec4 data[];
} out_data;

void main() {
    vec4 sum = vec4(0.0);
    for (int i = 0; i < 1024*768; ++i) {
        sum += in_data.data[i];
    }
    out_data.data[0] = sum;
}



//    #version 430
//
//    #extension GL_ARB_compute_shader : enable
//
//layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
//
//layout(binding = 0, std430) buffer InData {
//    float data[];
//} in_data;
//layout(binding = 1, std430) buffer OutData {
//    float data[];
//} out_data;
//
//shared float shared_mem[32];
//
//#define local_idx gl_LocalInvocationID.x
//
//void main() {
//    uint global_idx = gl_GlobalInvocationID.y * 32 + gl_GlobalInvocationID.x;
//
//    float temp = (in_data.data[global_idx * 4    ] + in_data.data[global_idx * 4 + 1])
//    + (in_data.data[global_idx * 4 + 2] + in_data.data[global_idx * 4 + 3]);
//
//    shared_mem[local_idx] = temp;
//
//    if (local_idx < 16) shared_mem[local_idx] += shared_mem[local_idx + 16];
//    if (local_idx < 8)  shared_mem[local_idx] += shared_mem[local_idx + 8];
//    if (local_idx < 4)  shared_mem[local_idx] += shared_mem[local_idx + 4];
//    if (local_idx < 2)  shared_mem[local_idx] += shared_mem[local_idx + 2];
//    if (local_idx < 1)  out_data.data[gl_WorkGroupID.x] = shared_mem[local_idx] + shared_mem[local_idx + 1];
//}
